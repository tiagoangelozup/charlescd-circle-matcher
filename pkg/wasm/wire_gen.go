// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wasm

import (
	"github.com/tetratelabs/proxy-wasm-go-sdk/proxywasm/types"
	"github.com/tiagoangelozup/charlescd-circle-matcher/internal/config"
	"github.com/tiagoangelozup/charlescd-circle-matcher/internal/context"
	"github.com/tiagoangelozup/charlescd-circle-matcher/pkg/ring"
	"github.com/tiagoangelozup/charlescd-circle-matcher/pkg/router"
)

// Injectors from wire.go:

func newHttpContext(httpID context.HttpID, pluginID context.PluginID, pluginRawData config.PluginRawData, vmRawData config.VMRawData) (types.HttpContext, error) {
	rings, err := config.NewRings(pluginRawData)
	if err != nil {
		return nil, err
	}
	service := ring.NewService(rings)
	jwt := router.NewJWT(service)
	return jwt, nil
}
